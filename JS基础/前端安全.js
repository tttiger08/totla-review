/**
 * 1.XSS攻击：简而言之攻击者想尽一切办法将可以执行的代码注入到网页中
 * 防御手段：①转义字符（可以通过配置白名单，指定哪些不需要转义），假设用户的输入永远都不可信。
 *           ②CSP 建立白名单，明确告诉浏览器哪些外部资源可以加载和执行，需要我们配置规则，由浏览器实现。
 *                  两种方式开启：1.设置 HTTP Header 中的 Content-Security-Policy
 *                                2.设置 meta 标签的方式 <meta http-equiv="Content-Security-Policy">
 * 
 * 
 * 2.CSRF攻击：跨站请求伪造。原理就是攻击者构造出一个后端请求地址，诱导用户点击或者通过某些途径自动发起请求。如果用户是在登录状态下的话，*后端就以为是用户在操作，从而进行相应的逻辑。    
 * 举个栗子：举个例子，假设网站中有一个通过 GET 请求提交用户评论的接口，那么攻击者就可以在钓鱼网站中加入一个图片，图片的地址就是评论接口
 * <img src="http://www.domain.com/xxx?comment='attack'"/>  
 *  
 * 防御手段：
 * Get 请求不对数据进行修改
 * 不让第三方网站访问到用户 Cookie（sameSite)
 * 阻止第三方网站请求接口  (验证 Referer)
 * 请求时附带验证信息，比如验证码或者 Token
 * 
 * 
 * 3.点击劫持：点击劫持是一种视觉欺骗的攻击手段。攻击者将需要攻击的网站通过 iframe 嵌套的方式嵌入自己的网页中，并将 iframe 设置为透明，页面中透出一个按钮诱导用户点击
 * 防御手段：
 * （1）X-FRAME-OPTIONS ：是一个 HTTP 响应头，在现代浏览器有一个很好的支持。这个 HTTP 响应头 就是为了防御用iframe 嵌套的点击劫持攻击
 *             三个值可选：DENY，表示页面不允许通过 iframe 的方式展示，
 *                         SAMEORIGIN，表示页面可以在相同域名下通过 iframe 的方式展示，
 *                         ALLOW-FROM，表示页面可以在指定来源的 iframe 中展示
 * （2） JS 防御
 * 
 */
